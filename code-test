<!DOCTYPE html>
<meta charset="utf-8" />
<title>Styling</title>
<script>
/** @type {'?' | 'error' | 'success'} */
var customCssLoaded = '?';
function updateCustomCss() {
  const message = document.getElementById('custom-css-message');
  if (!message) return;
  if (customCssLoaded === 'success') {
    message.innerHTML = "<strong>Custom CSS was successfully loaded.</strong>";
  }
}
function customCssErrored() { customCssLoaded = 'error'; updateCustomCss(); }
function customCssSuccess() { customCssLoaded = 'success'; updateCustomCss(); }
</script>

<link rel="stylesheet" href="./battle.css?v1" />
<link rel="stylesheet" href="./custom.css" onerror="customCssErrored()" onload="customCssSuccess()" />
<link rel="stylesheet" href="./font-awesome.css" />
<style>
.movemenu button.type-Normal {
	/* bg: 97 to 90, border: 70 */
	background: hsl(60,14%,93%);
	background: linear-gradient(to bottom,  hsl(60,14%,97%),  hsl(60,14%,84%));
	border-color: hsl(60,14%,70%);
}
.movemenu button.type-Normal small {
	color: hsl(60,14%,41%);
}
.movemenu button.type-Normal:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(60,14%,87%);
	background: linear-gradient(to bottom,  hsl(60,14%,94%),  hsl(60,14%,77%));
	border-color: hsl(60,14%,41%);
}
.movemenu button.type-Normal:active, .movemenu button.type-Normal.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(60,14%,77%);
	background: linear-gradient(to bottom,  hsl(60,14%,77%),  hsl(60,14%,83%));
	border-color: hsl(60,14%,41%);
}

.movemenu button.type-Fighting {
	/* bg: 97 to 90, border: 70 */
	background: hsl(3,40%,93%);
	background: linear-gradient(to bottom,  hsl(3,40%,97%),  hsl(3,40%,84%));
	border-color: hsl(3,40%,70%);
}
.movemenu button.type-Fighting small {
	color: hsl(3,40%,41%);
}
.movemenu button.type-Fighting:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(342, 16%, 87%);
	background: linear-gradient(to bottom,  hsl(3,40%,94%),  hsl(3,40%,77%));
	border-color: hsl(3,40%,41%);
}
.movemenu button.type-Fighting:active, .movemenu button.type-Fighting.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(342, 16%, 77%);
	background: linear-gradient(to bottom,  hsl(3,40%,77%),  hsl(3,40%,83%));
	border-color: hsl(3,40%,41%);
}

.movemenu button.type-Flying {
	/* bg: 97 to 90, border: 70 */
	background: hsl(255,20%,93%);
	background: linear-gradient(to bottom,  hsl(255,20%,97%),  hsl(255,20%,84%));
	border-color: hsl(255,20%,70%);
}
.movemenu button.type-Flying small {
	color: hsl(255,20%,41%);
}
.movemenu button.type-Flying:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(255,20%,87%);
	background: linear-gradient(to bottom,  hsl(255,20%,94%),  hsl(255,20%,77%));
	border-color: hsl(255,20%,41%);
}
.movemenu button.type-Flying:active, .movemenu button.type-Flying.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(255,20%,77%);
	background: linear-gradient(to bottom,  hsl(255,20%,77%),  hsl(255,20%,83%));
	border-color: hsl(255,20%,41%);
}

.movemenu button.type-Poison {
	/* bg: 97 to 90, border: 70 */
	background: hsl(300,30%,93%);
	background: linear-gradient(to bottom,  hsl(300,30%,97%),  hsl(300,30%,84%));
	border-color: hsl(300,30%,70%);
}
.movemenu button.type-Poison small {
	color: hsl(300,30%,41%);
}
.movemenu button.type-Poison:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(300,30%,87%);
	background: linear-gradient(to bottom,  hsl(300,30%,94%),  hsl(300,30%,77%));
	border-color: hsl(300,30%,41%);
}
.movemenu button.type-Poison:active, .movemenu button.type-Poison.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(300,30%,77%);
	background: linear-gradient(to bottom,  hsl(300,30%,77%),  hsl(300,30%,83%));
	border-color: hsl(300,30%,41%);
}

.movemenu button.type-Ground {
	/* bg: 97 to 90, border: 70 */
	background: hsl(44,27%,93%);
	background: linear-gradient(to bottom,  hsl(44,27%,97%),  hsl(44,27%,84%));
	border-color: hsl(44,27%,70%);
}
.movemenu button.type-Ground small {
	color: hsl(44,27%,41%);
}
.movemenu button.type-Ground:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(44,27%,87%);
	background: linear-gradient(to bottom,  hsl(44,27%,94%),  hsl(44,27%,77%));
	border-color: hsl(44,27%,41%);
}
.movemenu button.type-Ground:active, .movemenu button.type-Ground.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(44,27%,77%);
	background: linear-gradient(to bottom,  hsl(44,27%,77%),  hsl(44,27%,83%));
	border-color: hsl(44,27%,41%);
}

.movemenu button.type-Rock {
	/* bg: 97 to 90, border: 70 */
	background: hsl(49,35%,93%);
	background: linear-gradient(to bottom,  hsl(49,35%,97%),  hsl(49,35%,84%));
	border-color: hsl(49,35%,70%);
}
.movemenu button.type-Rock small {
	color: hsl(49,35%,41%);
}
.movemenu button.type-Rock:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(49,35%,87%);
	background: linear-gradient(to bottom,  hsl(49,35%,94%),  hsl(49,35%,77%));
	border-color: hsl(49,35%,41%);
}
.movemenu button.type-Rock:active, .movemenu button.type-Rock.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(49,35%,77%);
	background: linear-gradient(to bottom,  hsl(49,35%,77%),  hsl(49,35%,83%));
	border-color: hsl(49,35%,41%);
}

.movemenu button.type-Bug {
	/* bg: 97 to 90, border: 70 */
	background: hsl(66,42%,93%);
	background: linear-gradient(to bottom,  hsl(66,42%,97%),  hsl(66,42%,84%));
	border-color: hsl(66,42%,70%);
}
.movemenu button.type-Bug small {
	color: hsl(66,42%,41%);
}
.movemenu button.type-Bug:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(66,42%,87%);
	background: linear-gradient(to bottom,  hsl(66,42%,94%),  hsl(66,42%,77%));
	border-color: hsl(66,42%,41%);
}
.movemenu button.type-Bug:active, .movemenu button.type-Bug.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(66,42%,77%);
	background: linear-gradient(to bottom,  hsl(66,42%,77%),  hsl(66,42%,83%));
	border-color: hsl(66,42%,41%);
}

.movemenu button.type-Ghost {
	/* bg: 97 to 90, border: 70 */
	background: hsl(262,21%,93%);
	background: linear-gradient(to bottom,  hsl(262,21%,97%),  hsl(262,21%,84%));
	border-color: hsl(262,21%,70%);
}
.movemenu button.type-Ghost small {
	color: hsl(262,21%,41%);
}
.movemenu button.type-Ghost:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(262,21%,87%);
	background: linear-gradient(to bottom,  hsl(262,21%,94%),  hsl(262,21%,77%));
	border-color: hsl(262,21%,41%);
}
.movemenu button.type-Ghost:active, .movemenu button.type-Ghost.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(262,21%,77%);
	background: linear-gradient(to bottom,  hsl(262,21%,77%),  hsl(262,21%,83%));
	border-color: hsl(262,21%,41%);
}

.movemenu button.type-Steel {
	/* bg: 97 to 90, border: 70 */
	background: hsl(240,6%,93%);
	background: linear-gradient(to bottom,  hsl(240,6%,97%),  hsl(240,6%,84%));
	border-color: hsl(240,6%,70%);
}
.movemenu button.type-Steel small {
	color: hsl(240,6%,41%);
}
.movemenu button.type-Steel:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(240,6%,87%);
	background: linear-gradient(to bottom,  hsl(240,6%,94%),  hsl(240,6%,77%));
	border-color: hsl(240,6%,41%);
}
.movemenu button.type-Steel:active, .movemenu button.type-Steel.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(240,6%,77%);
	background: linear-gradient(to bottom,  hsl(240,6%,77%),  hsl(240,6%,83%));
	border-color: hsl(240,6%,41%);
}

.movemenu button.type-Fire {
	/* bg: 97 to 90, border: 70 */
	background: hsl(25,40%,93%);
	background: linear-gradient(to bottom,  hsl(25,40%,97%),  hsl(25,40%,84%));
	border-color: hsl(25,40%,70%);
}
.movemenu button.type-Fire small {
	color: hsl(25,40%,41%);
}
.movemenu button.type-Fire:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(25,40%,87%);
	background: linear-gradient(to bottom,  hsl(25,40%,94%),  hsl(25,40%,77%));
	border-color: hsl(25,40%,41%);
}
.movemenu button.type-Fire:active, .movemenu button.type-Fire.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(25,40%,77%);
	background: linear-gradient(to bottom,  hsl(25,40%,77%),  hsl(25,40%,83%));
	border-color: hsl(25,40%,41%);
}

.movemenu button.type-Water {
	/* bg: 97 to 90, border: 70 */
	background: hsl(222,29%,93%);
	background: linear-gradient(to bottom,  hsl(222,29%,97%),  hsl(222,29%,84%));
	border-color: hsl(222,29%,70%);
}
.movemenu button.type-Water small {
	color: hsl(222,29%,41%);
}
.movemenu button.type-Water:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(222,29%,87%);
	background: linear-gradient(to bottom,  hsl(222,29%,94%),  hsl(222,29%,77%));
	border-color: hsl(222,29%,41%);
}
.movemenu button.type-Water:active, .movemenu button.type-Water.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(222,29%,77%);
	background: linear-gradient(to bottom,  hsl(222,29%,77%),  hsl(222,29%,83%));
	border-color: hsl(222,29%,41%);
}

.movemenu button.type-Grass {
	/* bg: 97 to 90, border: 70 */
	background: hsl(100,30%,93%);
	background: linear-gradient(to bottom,  hsl(100,30%,97%),  hsl(100,30%,84%));
	border-color: hsl(100,30%,70%);
}
.movemenu button.type-Grass small {
	color: hsl(100,30%,41%);
}
.movemenu button.type-Grass:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(100,30%,87%);
	background: linear-gradient(to bottom,  hsl(100,30%,94%),  hsl(100,30%,77%));
	border-color: hsl(100,30%,41%);
}
.movemenu button.type-Grass:active, .movemenu button.type-Grass.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(100,30%,77%);
	background: linear-gradient(to bottom,  hsl(100,30%,77%),  hsl(100,30%,83%));
	border-color: hsl(100,30%,41%);
}

.movemenu button.type-Electric {
	/* bg: 97 to 90, border: 70 */
	background: hsl(48,41%,93%);
	background: linear-gradient(to bottom,  hsl(48,41%,97%),  hsl(48,41%,84%));
	border-color: hsl(48,41%,70%);
}
.movemenu button.type-Electric small {
	color: hsl(48,41%,41%);
}
.movemenu button.type-Electric:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(48,41%,87%);
	background: linear-gradient(to bottom,  hsl(48,41%,94%),  hsl(48,41%,77%));
	border-color: hsl(48,41%,41%);
}
.movemenu button.type-Electric:active, .movemenu button.type-Electric.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(48,41%,77%);
	background: linear-gradient(to bottom,  hsl(48,41%,77%),  hsl(48,41%,83%));
	border-color: hsl(48,41%,41%);
}

.movemenu button.type-Psychic {
	/* bg: 97 to 90, border: 70 */
	background: hsl(342,33%,93%);
	background: linear-gradient(to bottom,  hsl(342,33%,97%),  hsl(342,33%,84%));
	border-color: hsl(342,33%,70%);
}
.movemenu button.type-Psychic small {
	color: hsl(342,33%,41%);
}
.movemenu button.type-Psychic:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(342,33%,87%);
	background: linear-gradient(to bottom,  hsl(342,33%,94%),  hsl(342,33%,77%));
	border-color: hsl(342,33%,41%);
}
.movemenu button.type-Psychic:active, .movemenu button.type-Psychic.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(342,33%,77%);
	background: linear-gradient(to bottom,  hsl(342,33%,77%),  hsl(342,33%,83%));
	border-color: hsl(342,33%,41%);
}

.movemenu button.type-Ice {
	/* bg: 97 to 90, border: 70 */
	background: hsl(180,15%,93%);
	background: linear-gradient(to bottom,  hsl(180,15%,97%),  hsl(180,15%,84%));
	border-color: hsl(180,15%,70%);
}
.movemenu button.type-Ice small {
	color: hsl(180,15%,41%);
}
.movemenu button.type-Ice:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(180,15%,87%);
	background: linear-gradient(to bottom,  hsl(180,15%,94%),  hsl(180,15%,77%));
	border-color: hsl(180,15%,41%);
}
.movemenu button.type-Ice:active, .movemenu button.type-Ice.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(180,15%,77%);
	background: linear-gradient(to bottom,  hsl(180,15%,77%),  hsl(180,15%,83%));
	border-color: hsl(180,15%,41%);
}

.movemenu button.type-Dragon {
	/* bg: 97 to 90, border: 70 */
	background: hsl(257,39%,93%);
	background: linear-gradient(to bottom,  hsl(257,39%,97%),  hsl(257,39%,84%));
	border-color: hsl(257,39%,70%);
}
.movemenu button.type-Dragon small {
	color: hsl(257,39%,41%);
}
.movemenu button.type-Dragon:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(257,39%,87%);
	background: linear-gradient(to bottom,  hsl(257,39%,94%),  hsl(257,39%,77%));
	border-color: hsl(257,39%,41%);
}
.movemenu button.type-Dragon:active, .movemenu button.type-Dragon.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(257,39%,77%);
	background: linear-gradient(to bottom,  hsl(257,39%,77%),  hsl(257,39%,83%));
	border-color: hsl(257,39%,41%);
}

.movemenu button.type-Dark {
	/* bg: 97 to 90, border: 70 */
	background: hsl(24,18%,93%);
	background: linear-gradient(to bottom,  hsl(24,18%,97%),  hsl(24,18%,84%));
	border-color: hsl(24,18%,70%);
}
.movemenu button.type-Dark small {
	color: hsl(24,18%,41%);
}
.movemenu button.type-Dark:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(24,18%,87%);
	background: linear-gradient(to bottom,  hsl(24,18%,94%),  hsl(24,18%,77%));
	border-color: hsl(24,18%,41%);
}
.movemenu button.type-Dark:active, .movemenu button.type-Dark.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(24,18%,77%);
	background: linear-gradient(to bottom,  hsl(24,18%,77%),  hsl(24,18%,83%));
	border-color: hsl(24,18%,41%);
}

.movemenu button.type-Fairy {
	/* bg: 97 to 90, border: 70 */
	background: hsl(310,41%,93%);
	background: linear-gradient(to bottom,  hsl(310,41%,97%),  hsl(310,41%,84%));
	border-color: hsl(310,41%,70%);
}
.movemenu button.type-Fairy small {
	color: hsl(310,41%,41%);
}
.movemenu button.type-Fairy:hover {
	/* bg: 95 to 83, border: 41 */
	background: hsl(310,41%,87%);
	background: linear-gradient(to bottom,  hsl(310,41%,94%),  hsl(310,41%,77%));
	border-color: hsl(310,41%,41%);
}
.movemenu button.type-Fairy:active, .movemenu button.type-Fairy.pressed {
	/* bg: 83 to 88, border: 41 */
	background: hsl(310,41%,77%);
	background: linear-gradient(to bottom,  hsl(310,41%,77%),  hsl(310,41%,83%));
	border-color: hsl(310,41%,41%);
}

.movemenu button.type-Stellar {
	background: linear-gradient(90deg, hsl(330, 65%, 65%), hsl(126, 71%, 73%), hsl(231, 100%, 77%));
	border-color: linear-gradient(90deg, hsl(330, 66%, 58%), hsl(126, 79%, 65%), hsl(231, 98%, 65%));
}
.movemenu button.type-Stellar small {
	color: hsl(244, 24%, 24%);
}
.movemenu button.type-Stellar:hover {
	background: linear-gradient(90deg, hsl(330, 65%, 62%), hsl(126, 71%, 67%), hsl(231, 100%, 68%));
	border-color: linear-gradient(90deg, hsl(330, 66%, 58%), hsl(126, 79%, 65%), hsl(231, 98%, 65%));
}
.movemenu button.type-Stellar:active, .movemenu button.type-Stellar.pressed {
	background: linear-gradient(90deg, hsl(330, 65%, 45%), hsl(126, 71%, 73%), hsl(231, 100%, 86%));
	border-color: linear-gradient(90deg, hsl(330, 66%, 58%), hsl(126, 79%, 65%), hsl(231, 98%, 65%));
}
html {
  background: #EEE;
  font: 12pt Verdana, sans-serif;
}
.wrapper {
  max-width: 975px;
  margin: 0 auto;
}
h1, h2, p {
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
}
.light-container, .dark-container {
  float: left;
  width: 290px;
  min-height: 50px;
  margin-left: 10px;
  padding: 8px 10px;
  font-size: 10pt;

  background: #CCDDEE;
  color: #000;
  border: 1px solid #111;
}
.dark-container {
  background: #223344;
  color: #EEE;
}
.dark-container.code {
  background: #333;
  color: #DDD;
  overflow-wrap: break-word;
}
.clear {
  clear: both;
}
</style>

<div class="wrapper">

  <h1>Styling reference</h1>

  <p>
    This is a reference of the out-of-the-box CSS available for bots and chat plugins to use.
  </p>
  <p>
    It's also useful for servers wanting to write custom CSS, to see how the changes look. <span id="custom-css-message">Add a file named <code>custom.css</code> in this directory and refresh to see how it looks.</span>
  </p>
  <script> updateCustomCss(); </script>
  <p>
    We tend not to follow modern flat design. Instead, we give buttons a 3D effect, to improve their accessibility.
  </p>

  <h2>Buttons and links</h2>

  <p>
    Buttons and links are grouped together because they're kind of similar: If you click them, they perform an action. A link is just a special kind of button, a button that only performs navigation.
  </p>
  <p>
    It's common practice to make important links look like buttons, but buttons should never look like links. Links should be implemented with an <code>&lt;a></code> tag, never with a button, so that they can be opened in a new window (by middle-clicking or right-clicking).
  </p>
  <p>
    Buttons always get the pointer-finger mouse cursor, like links. This helps reinforce that they're clickable.
  </p>

  <p><code>.button</code></p>

  <p>
    Regular buttons always need <code>class="button"</code> to look like buttons &ndash; this is so you can apply other classes/styles if you want them to look like other things. You can also add the class to other elements, like links, to make them look like buttons.
  </p>
  <p>
    Notice the active (pressed down) styling.
  </p>

  <div class="light-container">
    <button class="button"><strong>Do the thing</strong></button>
    <a href="./" class="button">Cancel</a>
  </div>
  <div class="dark-container dark">
    <button class="button"><strong>Do the thing</strong></button>
    <a href="./" class="button">Cancel</a>
  </div>
  <div class="dark-container code dark">
    &lt;button class="button">&lt;strong>Do the thing&lt;/strong>&lt;/button>
    &lt;a href="./" class="button">Cancel&lt;/a>
  </div>
  <div class="clear"></div>

  <p><code>.button.disabled, .button:disabled</code></p>

  <p>
    Disabled buttons are faded out. Implementing <code>disabled</code> as a class lets you detect when they're moused-over (for tooltips) and clicked, and also lets you style links, if necessary. If <em>not</em> necessary, do set the <code>disabled</code> attribute instead, though, for accessibility reasons.
  </p>

  <div class="light-container">
    <button class="button" disabled><strong>Do the thing</strong></button>
    <a href="./" class="button disabled">Cancel</a>
  </div>
  <div class="dark-container dark">
    <button class="button" disabled><strong>Do the thing</strong></button>
    <a href="./" class="button disabled">Cancel</a>
  </div>
  <div class="dark-container code dark">
    &lt;button class="button disabled">&lt;strong>Do the thing&lt;/strong>&lt;/button>
    &lt;a href="./" class="button disabled">Cancel&lt;/a>
  </div>
  <div class="clear"></div>

  <p><code>.button.notifying, .button.subtle-notifying</code></p>

  <p>
    Notifying buttons are intended for situations where we're trying to get the user's attention. As usual, you can also style links or any other element.
  </p>

  <div class="light-container">
    <button class="button notifying">2 new battles!</button>
    <button class="button subtle-notifying">5 unimportant battles</button>
  </div>
  <div class="dark-container dark">
    <button class="button notifying">2 new battles!</button>
    <button class="button subtle-notifying">5 unimportant battles</button>
  </div>
  <div class="dark-container code dark">
    &lt;button class="button notifying">2 new battles!&lt;/button>
    &lt;button class="button subtle-notifying">5 unimportant battles&lt;/button>
  </div>
  <div class="clear"></div>

  <p><code>.button.button-first, .button.button-middle, .button.button-last, .button.cur</code></p>

  <p>
    These are used to group buttons together. <code>cur</code> works a lot like <code>disabled</code>, except the text isn't as greyed out, and is used to denote a current selection.
  </p>

  <div class="light-container">
    <button class="button button-first cur">Charmander</button><button class="button button-middle">Squirtle</button><button class="button button-last">Bulbasaur</button>
  </div>
  <div class="dark-container dark">
    <button class="button button-first cur">Charmander</button><button class="button button-middle">Squirtle</button><button class="button button-last">Bulbasaur</button>
  </div>
  <div class="dark-container code dark">
    &lt;button class="button button-first cur">Charmander&lt;/button>&lt;button class="button button-middle">Squirtle&lt;/button>&lt;button class="button button-last">Bulbasaur&lt;/button>
  </div>
  <div class="clear"></div>

  <p><code>a</code></p>

  <p>
    Links use browser default styling, including purple visited links. Dark mode lightens the default styling a bit (at a specificity of 2 classes, which you will hate when you're trying to make links look like other things), to keep them readable.
  </p>

  <div class="light-container">
    Play <a href="https://pokemonshowdown.com/">Showdown!</a>
  </div>
  <div class="dark-container dark">
    Play <a href="https://pokemonshowdown.com/">Showdown!</a>
  </div>
  <div class="dark-container code dark">
    Play &lt;a href="https://pokemonshowdown.com/">Showdown!&lt;/a>
  </div>
  <div class="clear"></div>

  <p><code>.blocklink</code></p>

  <p>
    Links that span an entire block.
  </p>

  <div class="light-container">
    <a class="blocklink" href="https://pokemonshowdown.com/">Showdown!</a>
  </div>
  <div class="dark-container dark">
    <a class="blocklink" href="https://pokemonshowdown.com/">Showdown!</a>
  </div>
  <div class="dark-container code dark">
    &lt;a class="blocklink" href="https://pokemonshowdown.com/">Showdown!&lt;/a>
  </div>
  <div class="clear"></div>

  <p><code>.subtle</code></p>

  <p>Subtle links are links that are unimportant. They look like normal text until moused over, because they would make text look unnecessarily cluttered.</p>
  <p>Subtle buttons look a bit different because they're still intended to look vaguely clickable, just not attention-drawing.</p>
  <p>Subtle links are used in credits, and for usernames in battle logs.</p>

  <div class="light-container">
    <button class="subtle"><strong>Do the thing</strong></button>
    <a href="./" class="subtle">Cancel</a>
  </div>
  <div class="dark-container dark">
    <button class="subtle"><strong>Do the thing</strong></button>
    <a href="./" class="subtle">Cancel</a>
  </div>
  <div class="dark-container code dark">
    &lt;button class="subtle">&lt;strong>Do the thing&lt;/strong>&lt;/button>
    &lt;a href="./" class="subtle">Cancel&lt;/a>
  </div>
  <div class="clear"></div>

  <h2>Forms</h2>

  <p>
    Not currently available to bots or chat plugins.
  </p>

  <p><code>.textbox</code></p>

  <p>
    Has hover and focus appearances, unlike most native text boxes. Label optional.
  </p>

  <div class="light-container">
    <label class="label">Name: <input type="text" class="textbox" /></label>
  </div>
  <div class="dark-container dark">
    <label class="label">Name: <input type="text" class="textbox" /></label>
  </div>
  <div class="dark-container code dark">
    &lt;label class="label">Name: &lt;input type="text" class="textbox" />&lt;/label>
  </div>
  <div class="clear"></div>

  <p><code>.option, .option.sel</code></p>

  <p>
    This is used for a button taking the role of <code>&lt;option></code> (in a drop-down selection menu). Normal button styling would look really cluttered, so option buttons are much subtler.
  </p>
  <p>
    The currently-selected option should be given the <code>cur</code> class.
  </p>

  <div class="light-container">
    <button class="option cur">Do the first thing</button>
    <button class="option">Do the second thing</button>
    <button class="option">Do the third thing</button>
  </div>
  <div class="dark-container dark">
    <button class="option cur">Do the first thing</button>
    <button class="option">Do the second thing</button>
    <button class="option">Do the third thing</button>
  </div>
  <div class="dark-container code dark">
    &lt;button class="option cur">Do the first thing&lt;/button>
    &lt;button class="option">Do the second thing&lt;/button>
    &lt;button class="option">Do the third thing&lt;/button>
  </div>
  <div class="clear"></div>

  <p><code>.checkbox</code></p>

  <p>
    This makes checkboxes and radio buttons look slightly nicer. We don't currently try to override the built-in checkbox widget, just make it a bit bigger, add the usual finger-cursor, and add a hover effect.
  </p>

  <div class="light-container">
    <label class="checkbox"><input type="checkbox" /> This is a checkbox</label>
  </div>
  <div class="dark-container dark">
    <label class="checkbox"><input type="checkbox" /> This is a checkbox</label>
  </div>
  <div class="dark-container code dark">
    &lt;label class="checkbox">&lt;input type="checkbox" /> This is a checkbox&lt;/label>
  </div>
  <div class="clear"></div>

  <h2>Chat features</h2>

  <p><code>code</code></p>

  <div class="light-container">
    <code>/([a-z]*)/g</code> is a regex.
  </div>
  <div class="dark-container dark">
    <code>/([a-z]*)/g</code> is a regex.
  </div>
  <div class="dark-container code dark">
    &lt;code>/([a-z]*)/g&lt;/code> is a regex.
  </div>
  <div class="clear"></div>

  <p><code>kbd</code></p>

  <div class="light-container">
    Try pressing <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd>.
  </div>
  <div class="dark-container dark">
    Try pressing <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd>.
  </div>
  <div class="dark-container code dark">
    Try pressing &lt;kbd>Ctrl&lt;/kbd>+&lt;kbd>Alt&lt;/kbd>+&lt;kbd>Del&lt;/kbd>.
  </div>
  <div class="clear"></div>

  <p><code>.spoiler</code></p>

  <p>
    Clicking the spoiler tag in PS will make the spoiler stay visible (requires JavaScript).
  </p>
  <p>
    Remember that spoilers can have <code>&lt;code></code> tags inside them, which should only be readable if shown.
  </p>

  <div class="light-container">
    Spoiler: <span class="spoiler">The <code>butler</code> did it</span><br />
    Clicked spoiler: <span class="spoiler-shown">The <code>butler</code> did it</span>
  </div>
  <div class="dark-container dark">
    Spoiler: <span class="spoiler">The <code>butler</code> did it</span><br />
    Clicked spoiler: <span class="spoiler-shown">The <code>butler</code> did it</span>
  </div>
  <div class="dark-container code dark">
    Spoiler: &lt;span class="spoiler">The &lt;code>butler&lt;/code> did it&lt;/span>&lt;br />
    Clicked spoiler: &lt;span class="spoiler-shown">The &lt;code>butler&lt;/code> did it&lt;/span>
  </div>
  <div class="clear"></div>
  <script>
    function clickSpoiler(event) {
      if (event.currentTarget.className === 'spoiler') {
        event.currentTarget.className = 'spoiler-shown';
      } else if (event.currentTarget.className === 'spoiler-shown') {
        event.currentTarget.className = 'spoiler';
      }
    }
    var spoilers = document.getElementsByClassName('spoiler');
    for (var i = 0; i < spoilers.length; i++) spoilers[i].onclick = clickSpoiler;
    spoilers = document.getElementsByClassName('spoiler-shown');
    for (var i = 0; i < spoilers.length; i++) spoilers[i].onclick = clickSpoiler;
  </script>

  <p><code>details.readmore</code></p>

  <p>
    Does not require JavaScript! As you can see, it's implemented with <code>&lt;details></code> and <code>&lt;summary></code>.
  </p>
  <p>
    For accessibility reasons, the "read more" button can only appear at the end of a line (using <code>&lt;/summary></code> to replace a <code>&lt;br /></code>).
  </p>

  <div class="light-container">
    <details class="readmore"><summary>This is<br />some text</summary>This is<br />some more</details>
  </div>
  <div class="dark-container dark">
    <details class="readmore"><summary>This is<br />some text</summary>This is<br />some more</details>
  </div>
  <div class="dark-container code dark">
    &lt;details class="readmore">&lt;summary>This is&lt;br />some text&lt;/summary>This is&lt;br />some more&lt;/details>
  </div>
  <div class="clear"></div>

  <p><code>.broadcast-blue, .broadcast-green, .broadcast-red</code></p>

  <p>
    Remember that broadcasts can have links inside them, which should be readable.
  </p>

  <div class="light-container">
    <div class="broadcast-blue"><strong>Important:</strong> Something <a href="./">happened</a>!</div>
    <div class="broadcast-green"><strong>Yay:</strong> Something <a href="./">succeeded</a>!</div>
    <div class="broadcast-red"><strong>Error:</strong> Something <a href="./">failed</a>!</div>
  </div>
  <div class="dark-container dark">
    <div class="broadcast-blue"><strong>Important:</strong> Something <a href="./">happened</a>!</div>
    <div class="broadcast-green"><strong>Yay:</strong> Something <a href="./">succeeded</a>!</div>
    <div class="broadcast-red"><strong>Error:</strong> Something <a href="./">failed</a>!</div>
  </div>
  <div class="dark-container code dark">
    &lt;div class="broadcast-blue">&lt;strong>Important:&lt;/strong> Something &lt;a href="./">happened&lt;/a>!&lt;/div>
    &lt;div class="broadcast-green">&lt;strong>Yay:&lt;/strong> Something &lt;a href="./">succeeded&lt;/a>!&lt;/div>
    &lt;div class="broadcast-red">&lt;strong>Error:&lt;/strong> Something &lt;a href="./">failed&lt;/a>!&lt;/div>
  </div>
  <div class="clear"></div>

  <p><code>.message-error</code></p>

  <div class="light-container">
    <p class="message-error"><strong>Error:</strong> Something went wrong!</p>
  </div>
  <div class="dark-container dark">
    <p class="message-error"><strong>Error:</strong> Something went wrong!</p>
  </div>
  <div class="dark-container code dark">
    &lt;p class="message-error">&lt;strong>Error:&lt;/strong> Something went wrong!&lt;/p>
  </div>
  <div class="clear"></div>

  <p><code>.message-log</code></p>

  <div class="light-container">
    <div class="message-log"><div class="chat"><small>[12:34] </small><strong><small>~</small>Zarel:</strong> <q>Hello!</q></div></div>
  </div>
  <div class="dark-container dark">
    <div class="message-log"><div class="chat"><small>[12:34] </small><strong><small>~</small>Zarel:</strong> <q>Hello!</q></div></div>
  </div>
  <div class="dark-container code dark">
    &lt;div class="message-log">&lt;div class="chat">&lt;small>[12:34] &lt;/small>&lt;strong>&lt;small>~&lt;/small>Zarel:&lt;/strong> &lt;q>Hello!&lt;/q>&lt;/div>&lt;/div>
  </div>
  <div class="clear"></div>

</div>
